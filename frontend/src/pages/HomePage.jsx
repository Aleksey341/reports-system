import { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../context/AuthContext';
import { useTheme } from '../context/ThemeContext';
import LoginModal from '../components/Auth/LoginModal';

export default function HomePage() {
  const { user, isAuthenticated, logout } = useAuth();
  const { theme, toggleTheme } = useTheme();
  const [showLoginModal, setShowLoginModal] = useState(false);
  const navigate = useNavigate();

  useEffect(() => {
    if (!isAuthenticated) {
      setShowLoginModal(true);
    }
  }, [isAuthenticated]);

  const getUserDisplayName = () => {
    if (user?.role === 'governor') {
      return '–ì—É–±–µ—Ä–Ω–∞—Ç–æ—Ä –õ–∏–ø–µ—Ü–∫–æ–π –æ–±–ª–∞—Å—Ç–∏';
    }
    return user?.municipality_name || '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä';
  };

  const getCardsForRole = () => {
    const operatorCards = [
      { title: '–§–æ—Ä–º–∞ 1-–ì–ú–£', desc: '–í–Ω–µ—Å–µ–Ω–∏–µ –µ–∂–µ–º–µ—Å—è—á–Ω—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π.', href: '/form', icon: 'üìù' },
      { title: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ì–ò–ë–î–î', desc: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ—Ä–æ–∂–Ω–æ-—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏–π.', href: '/gibdd', icon: 'üöó' },
      { title: '–§–∏–Ω–∞–Ω—Å—ã –ú—É–Ω–∏—Ü–∏–ø–∞–ª–∏—Ç–µ—Ç—ã', desc: '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –º—É–Ω–∏—Ü–∏–ø–∞–ª–∏—Ç–µ—Ç–æ–≤.', href: '/finance', icon: 'üí∞' }
    ];

    const adminCard = {
      title: '–û–±—â–∏–π –¥–∞—à–±–æ—Ä–¥',
      desc: '–ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Å–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º.',
      href: '/dashboard',
      icon: 'üìä'
    };

    if (user?.role === 'admin') {
      return [...operatorCards, adminCard];
    } else if (user?.role === 'governor') {
      return [adminCard];
    } else {
      return operatorCards;
    }
  };

  return (
    <>
      <LoginModal show={showLoginModal} onClose={() => setShowLoginModal(false)} />

      {isAuthenticated && (
        <div style={{ minHeight: '100vh' }}>
          <header className="container">
            <div className="flex-between mb-2">
              <h1>–°–∏—Å—Ç–µ–º–∞ –æ—Ç—á—ë—Ç–Ω–æ—Å—Ç–∏</h1>
              <div className="flex gap-2">
                <div className="text-secondary" style={{ fontSize: '14px', alignSelf: 'center' }}>
                  <strong style={{ color: 'var(--accent-blue-light)' }}>
                    {getUserDisplayName()}
                  </strong>
                </div>
                <button onClick={toggleTheme} className="btn-secondary">
                  {theme === 'dark' ? 'üåô –¢–µ–º–Ω–∞—è —Ç–µ–º–∞' : '‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞'}
                </button>
                <button onClick={logout} className="btn-secondary">
                  –í—ã–π—Ç–∏
                </button>
              </div>
            </div>

            <p className="text-muted mb-2">–ë—ã—Å—Ç—Ä—ã–µ —Å—Å—ã–ª–∫–∏:</p>

            <div className="grid grid-3">
              {getCardsForRole().map((card) => (
                <div
                  key={card.href}
                  className="card"
                  onClick={() => navigate(card.href)}
                  style={{ cursor: 'pointer', position: 'relative', overflow: 'hidden' }}
                >
                  <div
                    style={{
                      fontSize: '2.5rem',
                      marginBottom: '12px',
                      opacity: 0.9,
                      display: 'inline-block',
                      transition: 'transform 0.3s ease'
                    }}
                  >
                    {card.icon}
                  </div>
                  <h3 style={{ margin: '0 0 8px 0', fontSize: '1.1rem' }}>{card.title}</h3>
                  <p style={{ margin: '0 0 16px 0', fontSize: '0.9rem', lineHeight: 1.5 }}>
                    {card.desc}
                  </p>
                  <span style={{ color: 'var(--accent-blue-light)', fontWeight: 500 }}>
                    –û—Ç–∫—Ä—ã—Ç—å ‚Üí
                  </span>
                </div>
              ))}
            </div>
          </header>

          <footer style={{ opacity: 0.7, padding: '24px', textAlign: 'center' }}>
            <span className="text-muted">¬© –ê–ù–û "–û–±–ª–∞—Å—Ç—å –ë—É–¥—É—â–µ–≥–æ"</span>
          </footer>
        </div>
      )}
    </>
  );
}
